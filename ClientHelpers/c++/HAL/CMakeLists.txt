cmake_minimum_required(VERSION 2.8)

set (CMAKE_CXX_STANDARD 11)

# This branch assumes that gRPC and all its dependencies are already installed
# on this system, so they can be located by find_package().

# Find Protobuf installation
# Looks for protobuf-config.cmake file installed by Protobuf's cmake installation.
set(protobuf_MODULE_COMPATIBLE TRUE)
find_package(Protobuf CONFIG REQUIRED)
message(STATUS "Using protobuf ${protobuf_VERSION}")

set(_PROTOBUF_LIBPROTOBUF protobuf::libprotobuf)
set(_PROTOBUF_PROTOC $<TARGET_FILE:protobuf::protoc>)

# Find gRPC installation
# Looks for gRPCConfig.cmake file installed by gRPC's cmake installation.
find_package(gRPC CONFIG REQUIRED)
message(STATUS "Using gRPC ${gRPC_VERSION}")

set(_GRPC_GRPCPP_UNSECURE gRPC::grpc++_unsecure)
set(_GRPC_CPP_PLUGIN_EXECUTABLE $<TARGET_FILE:gRPC::grpc_cpp_plugin>)

# Proto file
get_filename_component(hw_proto "/home/danita/.FreeCAD/Mod/FreeCADFrontPanelSimulation/protos/FPSimulation.proto" ABSOLUTE)
get_filename_component(hw_proto_path "${hw_proto}" PATH)

get_filename_component(hw_proto_basename "${hw_proto}" NAME_WE)
message(STATUS "Proto basename: ${hw_proto_basename}")

# Generated sources
set(hw_proto_srcs "${CMAKE_CURRENT_BINARY_DIR}/generated/FPSimulation.pb.cc")
set(hw_proto_hdrs "${CMAKE_CURRENT_BINARY_DIR}/generated/FPSimulation.pb.h")
set(hw_grpc_srcs "${CMAKE_CURRENT_BINARY_DIR}/generated/FPSimulation.grpc.pb.cc")
set(hw_grpc_hdrs "${CMAKE_CURRENT_BINARY_DIR}/generated/FPSimulation.grpc.pb.h")
add_custom_command(
      OUTPUT "${hw_proto_srcs}" "${hw_proto_hdrs}" "${hw_grpc_srcs}" "${hw_grpc_hdrs}"
      COMMAND ${_PROTOBUF_PROTOC}
      ARGS --grpc_out "${CMAKE_CURRENT_BINARY_DIR}"
        --cpp_out "${CMAKE_CURRENT_BINARY_DIR}"
        -I "${hw_proto_path}"
        --plugin=protoc-gen-grpc="${_GRPC_CPP_PLUGIN_EXECUTABLE}"
        "${hw_proto}"
      DEPENDS "${hw_proto}")

add_library(HALFpSim STATIC 
    "${hw_proto_srcs}"
    "${hw_grpc_srcs}"
    "HALFpSim.cpp"
    )
target_link_libraries(HALFpSim
    "${_GRPC_GRPCPP_UNSECURE}"
    "${_PROTOBUF_LIBPROTOBUF}"
    )
